relaties leggen: validatie op classes zelf is moeilijk maar kan mits extra methode aanroepen
relaties leggen: mogelijk maken om te leggen vanuit doel of bron of valideren
relatieCreator => gebruikt relatieValidator en _validatie methode op objecten zelf om te verifiÃ«ren of een relatie mag gelegd worden. Houdt geen rekening met bestaande relaties


TODO's:
OTL model creator houdt geen rekening met bestaande classes en datatypes (deze moeten gewist worden indien niet meer in de OTL)
Asset Factory: 
  - create similar relations from asset
Create_model(pure=False) 
deprecated classes implementeren => evt warning geven bij gebruik
storage (in memory)
tempId's vs bestaande id's
agents kunnen niet zelf aangemaakt worden
AnyURI implementeren
utf-8 encoding > setting in pycharm aanpassen + UTF-8 + BOM aanzetten voor windows
Agent - Keuring ondersteuning > Worden niet correct gegenereerd
hoe libraries gemakkelijk importeren?
geometrie artefact gebruiken om WKT strings inhoudelijk te checke
postenmapping: implementatie in beide richtingen: van mapping naar assets en omgekeerd
. Get_attributes() om door atrrivuten te lopen. Dict
Docstring appenden vanuit otlbject met gnerieke functies
KwantWrd met readonly doen > setter weglaten 
Alle tests laten passen met 1 script
Live demo via console? 
Ooit vertrokken van meest simpele model, maar heeft geen inheritance metadata op types en attrs en heeft geen validatie. 
Dotnotatie bevatte waarde om validatie af te dwingen 
Info over attribuut: _attr

To check:
Agent
Keuring
Proef
Sokkel (dtc ontbreekt)
Signalisatie (abstract zonder attributen)
query'en welke concrete classes NIET overerven van AIMObject > RelatieInteractor en OTL Asset toevoegen aan die assets
AIMObject, Seinlantaarn > encoding probleem > voorlopige oplossing ==> # coding=utf-8



Facility
* Design
    - OTLModelCreator => creates OTL model
* ImportAndStore
* Store(Storage) = dicts (by type) in 1 dict for assets > create class to hold dict + operations
  + 1 dict to hold all assets (search by id)
    - StoreSearcher => return instance(s)
    - UpdateStore
    - CreateInStore => return instance with createdId
    - RemoveFromStore
* Factory
    - CreateAssetsInBulk => return list of instances
    - CreateRelations
* QualityControl
* Export
    - memory (Dicts)
    - Different formats
        - json
        - csv per type
