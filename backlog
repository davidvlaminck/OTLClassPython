Fix
utf-8 encoding > setting in pycharm aanpassen + UTF-8 + BOM aanzetten voor windows
Agent - Keuring ondersteuning > Worden niet correct gegenereerd
Nakijken implementatie van Agent, Signalisatie, proef en keuring:overerving van de base class otlobject: query'en welke concrete classes NIET overerven van AIMObject > RelatieInteractor en OTL Asset toevoegen aan die assets
Geldige relatie lijst refactor naar isistance met inheritance ipv alle relaties en testen:https://stackoverflow.com/questions/31488362/why-is-dict-faster-than-if-else-in-python/31488416
AttributeInfo inheritance nakijken > erft te veel keer over


Clean code
Defaultdict: dict met default value, dict group
Unpacking sequences
Gebruik classes met parameter namen


NewFeatures
OTL versie verwerken in logging createmodel
Dependencies resolven: pip install -r requirements.txt https://stackoverflow.com/questions/6590688/is-it-bad-to-have-my-virtualenv-directory-inside-my-git-repository
relatieCreator => gebruikt relatieValidator en _validatie methode op objecten zelf om te verifiëren of een relatie mag gelegd worden. Houdt geen rekening met bestaande relaties
OTL model creator houdt geen rekening met bestaande classes en datatypes (deze moeten gewist worden indien niet meer in de OTL)
Create_model(pure=False): pure maakt een model zonder toevoegingen zoals relatieInteractor en otlobject
Asset Factory: create similar relations from asset
deprecated: gebruik ervan moet in de logs een warning geven, zowel bij classes als attributen. Gebruik builtin warnings
Store: assets opslaan in Store waar je gemakkelijk kan zoeken op id of comb van naam en type. Maakt ook mogelijk om te controleren op ids of dubbele relaties
Automatisch temp id's genereren voor assets waar die niet is ingevuld (alleen nuttig indien via Factory aangemaakt, de gebruiker moet de ids kunnen vinden om bv relaties te leggen
AgentCollection: bevat Agents zodat men gemakkelijk relaties kan leggen naar bestaande Agents
Inlezen van Geometrie Artefact zodat per type validatie op geometrie kan gebeuren
AnyURIField implementeren met validatie voor zover dat mogelijk is
Postenmapping:
- van post automatisch asset maken met ingevulde waardes
- van ingevulde asset uitzoeken welke post of posten dit is
.attributenIterator: iterator voor de attributen van dat attribuut of class (zoeken naar attributen die met _ beginnen en otlfield zijn. In dict steken
Docstring appenden vanuit otlobject met generieke functies zoals attr_info
Attr_info met lege parameter: info over object zelf, werkt niet voor classed en type want dat heeft geen field
Import eminfra voor asset relaties etc: alternatief voor data afladen in Davie
https://towardsdatascience.com/making-network-graphs-interactive-with-python-and-pyvis-b754c22c270


Demo
Via console? Vermijd de nood voor imports
Enkel facility importeren
Creëer object via uri of naam
Vul asset info, met juiste en foute waardes
Vraag attribuut informatie op
Ander gebruik: normalisatie script
Abstracte class instantiëren


DemoInfo
use case: migratietraject met testdata ondersteunen
> allerlei features toegevoegd, zoals import, validatie, helper functies etc.
Ooit vertrokken van meest simpele model, maar heeft geen inheritance metadata op types en attrs en heeft geen validatie.
Dotnotatie bevatte waarde om validatie af te dwingen
Voordeel echte overerving: filter assets op abstract type, filter relatie van assets
Dynamic typing voor union types
Davie kan geen lege waardes verwerken. Is ook gevaarlijk. Mss aparte endpoint of metadata die aanduidt dat iets leeg mag


Facility
* Design
    - OTLModelCreator => creates OTL model
* ImportAndStore
* Store(Storage) = dicts (by type) in 1 dict for assets > create class to hold dict + operations
  + 1 dict to hold all assets (search by id)
    - StoreSearcher => return instance(s)
    - UpdateStore
    - CreateInStore => return instance with createdId
    - RemoveFromStore
* Factory
    - CreateAssetsInBulk => return list of instances
    - CreateRelations
* QualityControl
* Export
    - memory (Dicts)
    - Different formats
        - json
        - csv per type
