class attributes > instance attributes
https://stackoverflow.com/questions/60590442/abstract-dataclass-without-abstract-methods-in-python-prohibit-instantiation
abstract data class, evt aanpassen via __new__

relaties leggen: validatie op classes zelf
relaties leggen: mogelijk maken om te leggen vanuit doel of bron
methode op abstract class maken
> relatieObject implementeren
> DtcIdentificator implementeren
> AnyURI implementeren


overerving tussen classes
storage (in memory)
tempId's vs bestaande id's
type op implementatie model objecten? => enkel uri attribute op AIMObject invullen
uniontypes
agents kunnen niet zelf aangemaakt worden
deprecated classes geven een warning
deprecated attributen? door overerving aan te passen?


Facility
* ImportAndStore
* Store(Storage) = dicts (by type) in 1 dict for assets > create class to hold dict + operations
  + 1 dict to hold all assets (search by id)
    - StoreSearcher => return instance(s)
    - UpdateStore
    - CreateInStore => return instance with createdId
    - RemoveFromStore
* Factory
    - CreateAssetsInBulk => return list of instances
    - CreateRelations
* QualityControl
* Export
    - memory (Dicts)
    - Different formats